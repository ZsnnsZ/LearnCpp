1.算术类型
整型（字符型，布尔型）：
类型 含义 最小尺寸
bool 布尔类型 true/false

char 字符 8
wchar_t 宽字符 16
char16_t Unicode字符 16
char32_t Unicode字符 32

short 短整型 16
int 整型 16 >=short
long 长整型 32 >=int
long long 长长整型 64 >=long

浮点型：
float 单精度浮点数 6-7位有效数字 1个字 精度不够，代价同double
double 双精度浮点数 10-16位有效数字 2个字
long double 扩展精度浮点数 10-16位有效数字 3 或 4 个字 不常用

int,short,long,long long可以加unsigned得到无符号类型

选类型时：
a.数值不可能为负，选unsigned
b.对整数，选int，int不够选long long
c.算术表达式中不用char和bool
d.浮点数选double

2.类型转换
负数-->无符号数，2**int占的位数-|该负数|
使用无符号数来作为循环控制变量时，for循环可能死循环
for (unsigned u = 10;u >= 0;u--)
	std::cout << u << std::endl;
解决办法，用while循环改写
unsigned u = 11;
while (u > 0)
{
	--u;
	std::cout << u << std::endl;
}

3.字面值常量
字面值常量决定了它的数据类型
整型：0开头表示八进制，0x开头表示十六进制
浮点型：字面值表现为一个小数或以科学计数法表示的指数，默认浮点型字面值是一个double
字符和字符串：单引号括起来的一个字符为char型字面值，双引号括起来的零个或多个字符构成字符串型
布尔型：true，false
指针：nullptr
通过添加前缀和后缀，可以改变字面值的默认类型

4.声明和定义
声明变量用extern，并且不要再初始化
一个变量只能被定义一次，在其他文件中使用该变量时需要进行声明

5.命名规范
标识符：必须以字母和下划线开头，不能连续出现两个下划线，也不能下划线接大写字母开头，在函数体外的不能以下划线开头
变量名：用小写字母
类名：大写字母开头
单词之间用下划线区分

6.引用
引用即别名，引用不是对象，定义之后就不变了，对引用的操作落脚于对其绑定的对象的操作，通过引用来修改对象是很常用的
使用&d来定义引用类型
引用必须被初始化，初始值必须为对象，类型要和绑定对象匹配
例外：初始化常量引用时可以使用任意表达式进行初始化

7.指针
指针本身也是对象，指针存放某个对象的地址，使用*p来定义指针类型，取址符&可以获得对象地址，*为解引用符，对指针使用可以获得它指向的对象
void * 是一种特殊的指针类型，不能直接操作它所指的对象

8.const
const对象必须被初始化
常量引用不能用来修改对象，常量引用仅对引用能参与的操作进行了限制
常量指针必须初始化，指针本身的值不变

9.顶层和底层const
对象的值不可变是顶层，可变是底层
拷贝时若是底层const则两个对象必须都具有相同底层const资格或者两个变量的数据类型可以转换

10.常量表达式和constexpr
值不会变并且在编译过程就能得到计算结果
constexpr可以用于声明变量，让编译器来验证变量是否是常量表达式，如：constexpr int limit = 20

11.类型别名
typedef double wages
using wages = double

12.auto推断类型
auto i = 0，则i是一个整型

13.decltype推断并返回类型
decltype(z()) y = x

14.头文件保护符
依赖于预处理变量，#define将一个名字设定为预处理变量，#ifdef、#ifndef检查某个指定的预处理变量是否已经定义，若结果为真，执行后续操作到#endif

15.