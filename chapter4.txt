1.基础
左值和右值
当一个对象被用作右值的时候，用的是对象的值；作值用的是身份（内存中的位置）
左值可以代替右值，反之不能

求值顺序
运算符没有指定执行顺序时，如果表达式指向并修改了同一个对象，将会引发未定义的行为

2.算术运算符
/ 除法，舍弃余数
% 求余，参与运算的必须是整数类型

(-m)/n = m/(-n) = -(m/n)
m%(-n) = m%n,(-m)%n = -(m%n)

对大多数运算符来说，bool会提升为int

3.逻辑和关系运算符
关系运算符作用于算数类型或者指针
逻辑运算符作用于任何能够转换为布尔型的类型

进行比较运算时除非比较对象是布尔，不然不要用true和false作为运算对象

4.赋值运算符
赋值运算的结果是一个左值，类型为左侧对象的类型
条件语句中使用赋值运算符时加括号
可以使用复合赋值运算符

5.递增和递减运算符
前置与后置相比，不需要存储原始值

后置常用于：*p++

6.成员访问运算符
ptr->mem 等价 (*ptr).mem

7.条件运算符
cond？exp1：exp2；
不要超过两三层
优先级非常低，为了避免歧义一点要加括号

8.位运算符
<< 左移
>> 右移
～ 按位求反
& 位与
^ 位异或
| 位或

左移和右移对于移出边界的会舍弃

9.sizeof运算符
返回一条表达式或一个类型名字占的字节数
满足右结合律，值为size_t类型

10.逗号运算符

11.类型转换

